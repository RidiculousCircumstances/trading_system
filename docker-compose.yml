version: '3.9'

networks:
    leather_club:
        driver: bridge
    postgres:
        driver: bridge

volumes:
    dbdata:
        driver: local
    pgadmin:
        driver: local
    redis:
        driver: local

services:
    base_app: &base_app
        build:
            context: .
            dockerfile: ./docker/swoole/dockerfile
        env_file: .env
        volumes:
            - type: bind
              source: .
              target: /var/www/html
        depends_on:
            - db
            - redis
        networks:
            - leather_club

    web:
        <<: *base_app
        command: php artisan swoole:http start
        ports:
            - "1215:1215"
        healthcheck:
            test: [ 'CMD', 'wget', '--spider', '-q', 'http://127.0.0.1:1215' ]
            interval: 2s
            timeout: 2s

    main_queue:
        <<: *base_app
        command: php artisan queue:work

    cron:
        <<: *base_app
        command: supercronic /etc/supercronic/laravel

    composer:
        build:
            context: .
            dockerfile: ./docker/composer/dockerfile
            args:
                APP_UID: ${APP_UID}
                APP_GID: ${APP_GID}
        user: "${APP_UID}:${APP_GID}"
        volumes:
            - type: bind
              source: .
              target: /var/www/html



    db:
        build:
            context: .
            dockerfile: ./docker/postgre/dockerfile
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: "/var/lib/postgresql/data/pgdata"
        volumes:
            - type: bind
              source: ./docker/postgre/init
              target: /docker-entrypoint-initdb.d
            - type: volume
              source: dbdata
              target: /var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U db_user -d trading_system_db" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        networks:
            - leather_club
            - postgres

    pgadmin:
        image: dpage/pgadmin4:6.14
        env_file: .env
        environment:
            PGADMIN_DEFAULT_EMAIL: "test@gmail.com"
            PGADMIN_DEFAULT_PASSWORD: "secret"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - type: volume
              source: pgadmin
              target: /var/lib/pgadmin
        ports:
            - "${PG_ADMIN_PORT}:80"
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G
        networks:
            - postgres

    redis:
        image: "redis:alpine"
        env_file: .env
        restart: unless-stopped
        volumes:
            - type: bind
              source: ./docker/redis/conf/
              target: /usr/local/etc/redis/
            - type: bind
              source: ./storage/logs/redis
              target: /opt/redis/data/log
            - type: volume
              source: redis
              target: /opt/redis/data/bases
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - leather_club
